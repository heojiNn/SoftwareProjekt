@page "/skill/edit/{Id}"
@page "/skill/edit"

@inject NavigationManager NavigationManager
@using Team14.Data
@inject ISkillService SkillService


<EditForm Model="@workingSkill" OnValidSubmit="@UpdateSkill">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label> Id</label>
        <input  @bind="@workingSkill.Id" disabled>
    </div>
    <div class="form-group ">
        <label> Name</label>
        <input id="name" @bind="@workingSkill.Name">
    </div>
    <div class="form-group ">
        <label> Type</label>
        <InputSelect @bind-Value="@workingSkill.Skilltype">
            @foreach (var value in Enum.GetValues(typeof(Skill.SkillCatgeory)))
            {
                <option value="@value">@value</option>
            }
        </InputSelect>
    </div>

    <button id="sumitB" type="submit" class="btn btn-success">updaten</button>

</EditForm>

@code {
    [Parameter]
    public string Id { get; set; }
    private Skill workingSkill;
    private Skill urlSkill;
    protected override void OnInitialized()
    {
        try
        {
            urlSkill = SkillService.GetSkill(Int32.Parse(Id));
            workingSkill = new Skill
            {
                Id = urlSkill.Id,
                Name = urlSkill.Name,
                Skilltype = urlSkill.Skilltype
            };
        }
        catch (Exception) { }
        if (urlSkill == null)
            workingSkill = new Skill
            {
                Id = GetFreeID(),
                Name = "Neuer",
                Skilltype = Skill.SkillCatgeory.Softskill
            };

        }

        protected void UpdateSkill()
        {
            SkillService.UpdateSkill(workingSkill);
            NavigationManager.NavigateTo("Skill"); 
        }
        protected int GetFreeID()
        {
            foreach (int i in Enumerable.Range(1, 100))
            {
                if (null == SkillService.GetSkill(i))
                    return i;
            }
            return 101;
        }


}
