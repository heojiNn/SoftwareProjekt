@page "/offer-employee-detail-view/{Id}/{PersoNumber}"
@attribute [Authorize(Roles = "sales, admin")]

@inject IOfferService offerService
@inject IConfigService configService 
@inject IProfileService profileService
@inject IProjectService proService



<div class="container-fluid">
    <div class="card my-1">
        <div class="card-header text-center">
            <h3>Mitarbeiterdetailansicht von @(new String(offerEmployee.FirstName + " " + offerEmployee.LastName.Substring(0, 1) + "."))</h3>
        </div>
    </div>

    <div class="card mb-3">

        <div class="card-header">
            <h4>
                Angebots-Profil
            </h4>
        </div>
        <div class="row g-0">

            <div class="col-md-4">
                <img src="\@offerEmployee.Image" alt="Profilbild" class="rounded" style="margin:1em; max-width:90%">
            </div>
            <div class="col-md-8">
                <div class="card-body">
                    <h5 class="card-title">@(new String(offerEmployee.FirstName + " " + offerEmployee.LastName))</h5>
                    <p class="card-text">
                        Beschreibungstext: @offerEmployee.Description
                    </p>
                    <p class="card-text"><b>Rate Card Level: @offerEmployee.RCL</b></p>

                </div>
            </div>
        </div>
    </div>
</div>

@* TODO: *@
<div class="row row-cols-1 row-cols-md-2 g-4">
    <div class="col">
        <div class="card h-75">
            <div class="card-header">
                <h4>
                    Angebotsspezifische Rollen:
                    @if (RolleCollapsed)
                    {
                        <svg @onclick="@RolleToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M11.646 15.146L5.854 9.354a.5.5 0 01.353-.854h11.586a.5.5 0 01.353.854l-5.793 5.792a.5.5 0 01-.707 0z"></path></svg>

                    }


                    @if (!RolleCollapsed)
                    {
                        <svg @onclick="@RolleToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M12.354 8.854l5.792 5.792a.5.5 0 01-.353.854H6.207a.5.5 0 01-.353-.854l5.792-5.792a.5.5 0 01.708 0z"></path></svg>

                    }
                </h4>
            </div>
            @if (!RolleCollapsed)
            {
                <div class="card-body scroll">
                    <p></p>
                    <p></p>
                    <p></p>
                </div>
            }

        </div>
    </div>

@* TODO: *@
    <div class="col">
        <div class="card h-75">
            <div class="card-header">
                <h4>
                    Angebotsspezifische Hardskills:
                    @if (HardskillsCollapsed)
                    {
                        <svg @onclick="@HardskillsToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M11.646 15.146L5.854 9.354a.5.5 0 01.353-.854h11.586a.5.5 0 01.353.854l-5.793 5.792a.5.5 0 01-.707 0z"></path></svg>

                    }
                    @if (!HardskillsCollapsed)
                    {
                        <svg @onclick="@HardskillsToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M12.354 8.854l5.792 5.792a.5.5 0 01-.353.854H6.207a.5.5 0 01-.353-.854l5.792-5.792a.5.5 0 01.708 0z"></path></svg>
                    }
                </h4>
            </div>

            @if (!HardskillsCollapsed)
            {

                <div class="card-body scroll">
                    <div class="progress mb-3" style="height:15px">
                        @foreach (Skill s in offerEmployee.Abilities.Where(s => s.Type == SkillGroup.Hardskill))
                        {
                        <div class="progress-bar bg-secondary" role="progressbar" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" style="width:25%">
                            @s.Name
                        </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@* TODO: *@
<div class="row row-cols-1 row-cols-md-2 g-4">
    <div class="col">
        <div class="card h-75">
            <div class="card-header">
                <h4>
                    Angebotsspezifische Softskills:
                    @if (SoftskillsCollapsed)
                    {
                        <svg @onclick="@SoftskillsToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M11.646 15.146L5.854 9.354a.5.5 0 01.353-.854h11.586a.5.5 0 01.353.854l-5.793 5.792a.5.5 0 01-.707 0z"></path></svg>

                    }
                    @if (!SoftskillsCollapsed)
                    {
                        <svg @onclick="@SoftskillsToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M12.354 8.854l5.792 5.792a.5.5 0 01-.353.854H6.207a.5.5 0 01-.353-.854l5.792-5.792a.5.5 0 01.708 0z"></path></svg>
                    }
                </h4>
            </div>

            @if (!SoftskillsCollapsed)
            {

                <div class="card-body scroll">
                    <div class="progress mb-3" style="height:15px">
                        @foreach (Skill s in offerEmployee.Abilities.Where(s => s.Type == SkillGroup.Softskill))
                        {
                        <div class="progress-bar bg-secondary" role="progressbar" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" style="width:25%">
                            @s.Name
                        </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>

    @* TODO: *@
    <div class="col">
        <div class="card h-75">
            <div class="card-header">
                <h4>
                    Angebotsspezifisches Branchenwissen:
                    @if (BranchenwissenCollapsed)
                    {
                        <svg @onclick="@BranchenwissenToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M11.646 15.146L5.854 9.354a.5.5 0 01.353-.854h11.586a.5.5 0 01.353.854l-5.793 5.792a.5.5 0 01-.707 0z"></path></svg>
                    }
                    @if (!BranchenwissenCollapsed)
                    {
                        <svg @onclick="@BranchenwissenToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M12.354 8.854l5.792 5.792a.5.5 0 01-.353.854H6.207a.5.5 0 01-.353-.854l5.792-5.792a.5.5 0 01.708 0z"></path></svg>
                    }
                </h4>
            </div>

            @if (!BranchenwissenCollapsed)
            {

                <div class="card-body scroll">
                    <p> </p>
                    <p> </p>
                    <p> </p>
                </div>
            }
        </div>
    </div>
</div>

<div class="row row-cols-1 row-cols-md-2 g-4">

    <div class="col">
        <div class="card h-75">
            <div class="card-header">
                <h4>
                    Projekte
                    @if (ProjektCollapsed)
                    {
                        <svg @onclick="@ProjektToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M11.646 15.146L5.854 9.354a.5.5 0 01.353-.854h11.586a.5.5 0 01.353.854l-5.793 5.792a.5.5 0 01-.707 0z"></path></svg>
                    }
                    @if (!ProjektCollapsed)
                    {
                        <svg @onclick="@ProjektToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M12.354 8.854l5.792 5.792a.5.5 0 01-.353.854H6.207a.5.5 0 01-.353-.854l5.792-5.792a.5.5 0 01.708 0z"></path></svg>
                    }
                </h4>
            </div>

            @if (!ProjektCollapsed)
            {
                @foreach (Project pro in proService.ShowAllProjects())
                {
                                               @foreach (var akti in pro.Activities)
                            {
                                <div class="card">
                                    <div class="card-header">
                                        @akti.Key
                                        
                            @foreach (var e in akti.Value.persNr)
                            {
                                @e
                            }
                                        
                                    </div>
                                    <div class="card-body">
                                        <a href="/document-config-edit" style="color:black">Profil anzeigen</a>

                                    </div>
                                </div>
                            }

                }
            }
        </div>
    </div>
</div>
 <button type="button" class="btn btn-secondary" style="float:right; margin: 3em 1em" @onclick=@(async () => await BlazorDownloadFileService.DownloadFile("Mitarbeiter.doc", configService.GenerateSingleProfile(offerEmployee),"application/octet-stream"))>
        Download des Einzelprofils
    </button>
<a href="document-config-edit" class="btn btn-secondary" style="float:right; margin: 3em 1em"> Dokumentenkonfiguration bearbeiten</a>
<a href="offer/@Id" class="btn btn-secondary" style="float:right; margin: 3em 1em"> Zur√ºck zum Angebot </a>



@code
{
    // Einzelprofil downloaden
    [Inject] public IBlazorDownloadFileService BlazorDownloadFileService { get; set; }

    [Parameter]
    public string Id { get; set; } // Of the parenting offer (identifies the parenting config in combination with PersoNumber below)
    [Parameter]
    public string PersoNumber { get; set; } // Of the parenting employee

    private ChangeResult changeInfo = new();
    private Offer offer;
    private Employee offerEmployee;


    protected override void OnInitialized()
    {
        offer = offerService.ShowOffer(int.Parse(Id));
        offer ??= new Offer();
        offerService.ChangeEventHandel += OnChangeReturn;
        //reference: OfferService.ShowAllOffers()->var employees 
        offerEmployee = offer.participants.Where(e => e.PersoNumber.Equals(PersoNumber)).FirstOrDefault();
    }

    private void OnChangeReturn(object sender, ChangeResult e)
    {
        changeInfo = e;
    }

    public bool MitarbeiterCollapsed { get; set; }
    public bool HardskillsCollapsed { get; set; }
    public bool SoftskillsCollapsed { get; set; }
    public bool RolleCollapsed { get; set; }
    public bool BranchenwissenCollapsed { get; set; }
    public bool SprachenCollapsed { get; set; }
    public bool ProjektCollapsed { get; set; }

    void RolleToggle()
    {
        RolleCollapsed = !RolleCollapsed;
    }
    void HardskillsToggle()
    {
        HardskillsCollapsed = !HardskillsCollapsed;
    }
    void SoftskillsToggle()
    {
        SoftskillsCollapsed = !SoftskillsCollapsed;
    }
    void BranchenwissenToggle()
    {
        BranchenwissenCollapsed = !BranchenwissenCollapsed;
    }
    void SprachenToggle()
    {
        SprachenCollapsed = !SprachenCollapsed;
    }
    void ProjektToggle()
    {
        ProjektCollapsed = !ProjektCollapsed;
    }
    void MitarbeiterToggle()
    {
        MitarbeiterCollapsed = !MitarbeiterCollapsed;
    }
    }