@page "/offer/{Id:int}"
@attribute [Authorize(Roles = "sales, admin")]
@namespace XCV.Pages.OfferNamespace

@inject CustomAuthentiProvider authentiProvider
@inject IProfileService profileService
@inject IOfferService offerService
@inject IGenerateService generateService 
@inject IConfigService configService
@inject IJSRuntime JS

@using System.Globalization;

<div class="container-fluid">


    <div class="card my-1">
        <div class="card-header">
            <h3> @myOffer.Title </h3>
            <h5 style="color: white; text-align: center;"> Von @(myOffer.Start.ToString("d", CultureInfo.CreateSpecificCulture("de-DE"))) - Bis @(myOffer.End.ToString("d", CultureInfo.CreateSpecificCulture("de-DE")))  </h5>
        </div>
    </div>

    @* Optional Description *@
    @if (myOffer.Description.Length != 0 && myOffer.Description != null)
    {

        <div class="card ">
            <div class="card-header">
                <h4>
                    Beschreibungstext
                    @if (DescriptionCollapsed)
                    {
                        <svg @onclick="@BeschreibungToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                             width="24" height="24">
                            <path d="M11.646 15.146L5.854 9.354a.5.5 0 01.353-.854h11.586a.5.5 0 01.353.854l-5.793 5.792a.5.5 0 01-.707 0z">
                            </path>
                        </svg>
                    }

                    @if (!DescriptionCollapsed)
                    {
                        <svg @onclick="@BeschreibungToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                             width="24" height="24">
                            <path d="M12.354 8.854l5.792 5.792a.5.5 0 01-.353.854H6.207a.5.5 0 01-.353-.854l5.792-5.792a.5.5 0 01.708 0z">
                            </path>
                        </svg>
                    }

                </h4>
            </div>
            @if (!DescriptionCollapsed)
            {
                <div class="card-body scroll h-100">
                    <p class="card-text">
                        <pre>@myOffer.Description</pre>
                    </p>
                </div>
            }
        </div> }

    @* Fields *@
    <div class="card ">
        <div class="card-header">
            <h4>
                Branchen
                @if (FieldsCollapsed)
                {
                    <svg @onclick="@BrancheToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                         width="24" height="24">
                        <path d="M11.646 15.146L5.854 9.354a.5.5 0 01.353-.854h11.586a.5.5 0 01.353.854l-5.793 5.792a.5.5 0 01-.707 0z">
                        </path>
                    </svg>
                }

                @if (!FieldsCollapsed)
                {
                    <svg @onclick="@BrancheToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                         width="24" height="24">
                        <path d="M12.354 8.854l5.792 5.792a.5.5 0 01-.353.854H6.207a.5.5 0 01-.353-.854l5.792-5.792a.5.5 0 01.708 0z">
                        </path>
                    </svg>
                }

            </h4>
        </div>
        @if (!FieldsCollapsed)
        {
            <div class="card-body scroll h-100">
                <div class="row">
                    @foreach (Field f in myOffer.Fields)
                    {
                        if (f.Equals(myOffer.Fields.Last()))
                        {
                            <p>@f.Name</p> }
                        else
                        {
                            <p>@(f.Name + ",") &nbsp </p>}
                    }
                    @if (myOffer.Fields.Count() == 0)
                    {
                        <p> - </p>
                    }
                </div>
            </div>
        }
    </div>

    <br />
    @* Hardskills *@
    <div class="row gutters-sm">
        <div class="col-sm-6 mb-3" style="float: left">
            <CollapsibleCard CardHeaderTitle="Hardskills" ShowCardBody=true>
                <CardBody>
                    <div class="scroll">
                        @foreach (Skill sSkill in myOffer.Requirements.Where(x => x.Type == SkillGroup.Hardskill))
                        {
                            <p class="ml-2"> @sSkill <br></p>}
                    </div>
                </CardBody>
            </CollapsibleCard>
        </div>

        @* Softskills *@
        <div class="col-sm-6 mb-3">
            <CollapsibleCard CardHeaderTitle="Softskills" ShowCardBody=true>
                <CardBody>
                    <div class="scroll">
                        @foreach (Skill sSkill in myOffer.Requirements.Where(x => x.Type == SkillGroup.Softskill))
                        {
                            <p class="ml-2"> @sSkill <br></p>}
                    </div>
                </CardBody>
            </CollapsibleCard>
        </div>
    </div>

    @* Employees *@
    <div class="card ">
        <div class="card-header">
            <h4>
                Mitarbeiter

                @if (MitarbeiterCollapsed)
                {
                    <svg @onclick="@MitarbeiterToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                         width="24" height="24">
                        <path d="M11.646 15.146L5.854 9.354a.5.5 0 01.353-.854h11.586a.5.5 0 01.353.854l-5.793 5.792a.5.5 0 01-.707 0z">
                        </path>
                    </svg>}

                @if (!MitarbeiterCollapsed)
                {
                    <svg @onclick="@MitarbeiterToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                         width="24" height="24">
                        <path d="M12.354 8.854l5.792 5.792a.5.5 0 01-.353.854H6.207a.5.5 0 01-.353-.854l5.792-5.792a.5.5 0 01.708 0z">
                        </path>
                    </svg>}

            </h4>
        </div>

        @if (!MitarbeiterCollapsed)
        {
            <div class="card-body">
                <div class="row">
                    @foreach (Employee e in myOffer.participants)
                    {
                        <div class="card">
                            <div class="card-header">
                                @(new String(e.FirstName + " " + e.LastName.Substring(0, 1) + "."))
                                @if (configService.GetSelectedConfig(myOffer) != null && selectedConfig != null && selectedConfig.Count != 0)
                                {
                                    <a href="offer-employee-detail-view/@Id/@selectedConfig.First().Name/@e.PersoNumber" class="oi oi-person" style="color: #7A212E; float:right;"></a>}
                                else
                                {
                                    <a href="offer-employee-detail-view/@Id/@e.PersoNumber" class="oi oi-person" style="color: #7A212E; float:right;"></a>
                                }
                            </div>
                            <div class="card-body">
                                <p> Rolle: @e.offerRole </p>
                                <p> RCL: @e.offerRCL </p>
                                <p> Stundensatz: @(e.offerWage + " EUR/Std")</p>
                                <p> Std/Tag: @(e.hoursPerDay + "/24")</p>
                                <p> Tag/Laufzeit: @(e.daysPerRun + "/" + @offerService.Runtime(myOffer.End, myOffer.Start) + "T")</p>
                                <p> Rabatt: @(e.discount + "%")</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>

    <div class="card ">
        <div class="card-header">
            <h4>
                Dokumentenkonfigurationen

                @if (ConfigCollapsed)
                {
                    <svg @onclick="@KonfigurationsToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                         width="24" height="24">
                        <path d="M11.646 15.146L5.854 9.354a.5.5 0 01.353-.854h11.586a.5.5 0 01.353.854l-5.793 5.792a.5.5 0 01-.707 0z">
                        </path>
                    </svg>}

                @if (!ConfigCollapsed)
                {
                    <svg @onclick="@KonfigurationsToggle" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                         width="24" height="24">
                        <path d="M12.354 8.854l5.792 5.792a.5.5 0 01-.353.854H6.207a.5.5 0 01-.353-.854l5.792-5.792a.5.5 0 01.708 0z">
                        </path>
                    </svg>}

            </h4>
        </div>

        @if (!ConfigCollapsed)
        {
            <div class="card-body">
                <div class="row">

                    <div class="col-sm-6">
                        <div class="card">
                            <div class="card-header">
                                Neue Konfiguration erstellen:
                            </div>
                            <div class="card-body">
                                <button type="button" class="btn btn-secondary oi oi-plus" style="float:left;" @onclick="@(e => Validate(myOffer, new DocumentConfig { Name = configName}))"></button>
                                <textarea class="form-control " rows="1" @bind="@configName" placeholder="Konfigurationsname"> </textarea>
                            </div>
                        </div>
                        <div class="card">
                            @if (configService.GetSelectedConfig(myOffer) != null)
                            {
                                <div class="card-header">
                                    <p style="color: blue"> Aktive Konfiguration: @configService.GetSelectedConfig(myOffer).Name</p>
                                </div> }
                            else
                            {
                                <div class="card-header">
                                    <p style="color: blue"> Keine aktiven Konfigurationen </p>
                                </div>}

                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="card scroll" style="min-height:200px">
                            @if (selectedConfig.Count != 0 && selectedConfig != null)
                            {
                                foreach (DocumentConfig cfg in configs)
                                {
                                    bool contained = cfg.Name.Equals(selectedConfig.First().Name);
                                    <div class="col">
                                        <input type="checkbox" checked="@contained" @onchange="@(e =>  CheckboxClicked(e.Value, cfg))" />
                                        <span style="min-width: 100px;"> Konfiguration : @cfg.Name </span>
                                        <button type="button" class="btn btn-secondary oi oi-trash" style="float:right;" @onclick="@(e => NotifyDel(cfg))"></button>
                                    </div>
                                }
                            }
                            else
                            {
                                if (configs.Count != 0)
                                {
                                    foreach (DocumentConfig cfg in configs)
                                    {
                                        <div class="col">
                                            <input type="checkbox" checked="@false" @onchange="@(e =>  CheckboxClicked(e.Value, cfg))" />
                                            <span style="min-width: 100px;"> Konfiguration : @cfg.Name </span>
                                            <button type="button" class="btn btn-secondary oi oi-trash" style="float:right;" @onclick="@(e => NotifyDel(cfg))"></button>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>


                </div>
            </div>
        }
    </div>
    <a href="offers" class="btn btn-secondary" style="float:left; margin: 3em 1em"> Angebotsübersicht </a>
    <a href="offers" class="btn btn-secondary" style="float:right; margin: 3em 1em" @onclick="(e => DeleteOffer(myOffer))">Löschen</a>
    <a href="offer-edit/@Id" class="btn btn-secondary" style="float:right; margin: 3em 1em"> Bearbeiten</a>
    <button type="button" class="btn btn-secondary" style="float:right; margin: 3em 1em" @onclick="(e => offerService.Copy(myOffer))"> Kopieren </button>
    @if (selectedConfig.Count == 0)
    {
        <button type="button" class="btn btn-secondary" style="float:right; margin: 3em 1em" @onclick="@(e => NotifySel())"> Download </button>
    }
    else
    {
        <button type="button" class="btn btn-secondary" style="float:right; margin: 3em 1em" @onclick=@(async () => await BlazorDownloadFileService.DownloadFile($"{myOffer.Title}" + ".doc", generateService.GenerateDocumentConfig(myOffer, configService.GetSelectedConfig(myOffer)),"application/octet-stream"))>
           Download
        </button>}
</div>

<Modal @ref="modal">
    <Title>Bei Bestätigung wird folgende Konfiguration gelöscht:</Title>
    <Body>
        <ul class="alert alert-danger" role="alert">
            @if (editingConfig != null)
                @editingConfig.Name
        </ul>
    </Body>
    <Footer>
        <a href="javascript:location.reload(true)" class="btn btn-primary" @onclick="@(e => DeleteConfig(myOffer, editingConfig))">Konfiguration löschen</a>
        <button type="button" class="btn btn-secondary" @onclick="@Close">abbrechen</button>
    </Footer>
</Modal>

<Modal @ref="modal2">
    <Title>Bitte wählen Sie zum Download eine Dokumentenkonfiguration aus.</Title>
    <Body>
        -
    </Body>
    <Footer>
        <button type="button" class="btn btn-secondary" @onclick="@Close">Ok</button>
    </Footer>
</Modal>

<Modal @ref="modal3">
    <Title>Erzeugen einer neuen Konfiguration:</Title>
    <Body>
       <p class="alert alert-danger">@error</p>
    </Body>
    <Footer>
        <button type="button" class="btn btn-secondary" @onclick="@Close">Schließen</button>
    </Footer>
</Modal>

