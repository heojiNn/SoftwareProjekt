@page "/"
@page "/my-profile"
@attribute [Authorize]


@inject CustomAuthentiProvider authentiProvider
@inject IProfileService profileService
@inject ISkillService skillService
@inject ILanguageService sprachenService
@inject IProjectService proService



<div class="card my-1">
    <div class="card-header text-center" style="position: relative">
        <div style="position: absolute; margin-top: 0.1%;">
            <a href="edit-profile" class="btn btn-secondary oi oi-cog" style="border-color: #7A212E"> Bearbeiten</a>
        </div>
        <h3 style="text-align: center">Profil Übersicht von @myProfile.FirstName @myProfile.LastName</h3>
    </div>
</div>
@if (!myProfile.MadeFirstChangesOnProfile)
{
    <br>
    <div class="alert alert-warning" role="alert">
        Sie habe noch keine Änderungen an ihrem Profil vorgenommen.<br>
        Bitte tragen Sie die die Informationen möglichst bald ein.<br>
    </div>
}
<div class="card mb-3">
    <div class="card-header">
        <h4> Beschreibung </h4>
    </div>

    <div class="row g-0">
        <div class="col-md-4">
            <img src="profile/@myProfile.Image" alt="Profilbild" class="rounded" style="margin:1em; max-width:90%">
        </div>
        <div class="col-md-8">
            <div class="card-body">
                <h5 class="card-title">@myProfile.FirstName &nbsp; @myProfile.LastName</h5>
                <p>Angestellt seit @myProfile.EmployedSince.Date.ToString("dd.MM.yyyy")</p>
                <p class="card-text" style="min-height: 150px; font-size:1rem;">
                    <pre style="font-family: sans-serif;">@myProfile.Description</pre>
                </p>
                <p>Rate Card Level: @myProfile.RCL </p>
                @{var yearsE = myProfile.Experience != null ? (float)(DateTime.Now.Subtract(myProfile.Experience.Value).Days) / 356 : 0;}
                <p>Berufserfahrung: @(yearsE == 0 ? "noch nicht gesetzt" :  $"{yearsE.ToString("N2") } Jahre" ) </p>
            </div>
        </div>
    </div>
</div>

<div class="row gutters-sm">
    <div class="col-sm-6 mb-3" style="min-height: 200px;">
        <CollapsibleCard2 CardHeaderTitle="Rollen" ShowCardBody="@ColabseState[0]">
            <CardBody>
                <div class="scroll">
                    @foreach (Role role in myProfile.Roles)
                    {
                        <p class="ml-2">@role @if (myProfile.RCL == 8 && role.RCL != 8)
                        {<span> runtergestuft auf RCL (@role.RCL)</span>}</p>
                    }
                </div>
            </CardBody>
        </CollapsibleCard2>
    </div>
    <div class="col-sm-6 mb-3" style="min-height: 200px;">
        <CollapsibleCard2 CardHeaderTitle="Branchenwissen" ShowCardBody="@ColabseState[1]">
            <CardBody>
                <div class="scroll">
                    @foreach (Field field in myProfile.Fields)
                    {
                        <p class="ml-2">@field <br></p>
                    }
                </div>
            </CardBody>
        </CollapsibleCard2>
    </div>


    <div class="col-sm-6 mb-3" style="min-height: 200px;">
        <CollapsibleCard2 CardHeaderTitle="Softskills" ShowCardBody="@ColabseState[2]">
            <CardBody>
                <div class="scroll">
                    @foreach (Skill sSkill in myProfile.Abilities.Where(x => x.Type == SkillGroup.Softskill))
                    {
                        <p class="ml-2"> @sSkill <br></p>
                    }
                </div>
            </CardBody>
        </CollapsibleCard2>
    </div>
    <div class="col-sm-6 mb-3" style="min-height: 200px;">
        <CollapsibleCard2 CardHeaderTitle="Sprachen" ShowCardBody="@ColabseState[3]">
            <CardBody>
                <div class="scroll">
                    @foreach (Language lang in myProfile.Languages)
                    {
                        var lvlIndex = Array.FindIndex(sprachenService.GetAllLevel(), (x => x == lang.Level));
                        int lvlIndexPerce = ((int)lvlIndex * 100 / (sprachenService.GetAllLevel().Length - 1));

                        <p class="ml-2">@lang.Name</p>
                        <div class="progress mb-3 ml-2" style="height:15px">
                            <div class="progress-bar bg-secondary" role="progressbar" aria-valuemin="0"
                                 aria-valuemax="100" style="width: @lvlIndexPerce%;">
                                @lang.Level
                            </div>
                        </div>
                    }
                </div>
            </CardBody>
        </CollapsibleCard2>
    </div>


    <div class="col-sm-6 mb-3 " style="min-height: 200px;">
        <CollapsibleCard2 CardHeaderTitle="Hardskills" ShowCardBody="@ColabseState[4]"             >
            <CardBody>
                <div class="scroll2">
                    @{ var hSkills = myProfile.Abilities.Where(x => x.Type == SkillGroup.Hardskill);
                        if (hSkills.Any())
                        {
                            var root = hSkills.First().Category.GetRoot();
                            var hRoot = (SkillCategory)(root.Children.First(x => x.Name == "HardSkills"));
                            ColabseNum = 6;
                            foreach (SkillCategory topLevel in hRoot.Children)
                            {
                                if (topLevel is SkillCategory toptCast && toptCast.Children.Any())
                                {
                                    <CollapsibleCard2 CardHeaderTitle="@topLevel.Name" SmallInner="true" ShowCardBody="@ColabseState[ColabseNum]">
                                        <CardBody>
                                            @foreach (var cat in topLevel.Children)
                                            {
                                                ColabseNum++;
                                                if (cat is Skill skill)
                                                {
                                                    int lvlIndex = Array.FindIndex(skillService.GetAllLevel(), (x => x == skill.Level)) + 1;
                                                    if (lvlIndex == 1)
                                                    {
                                                        <button class="btn btn-outline-secondary btn-sm" style="margin: 3px 0px 3px 3px;" disabled>@skill<b>@lvlIndex</b></button> }
                                                    if (lvlIndex == 2)
                                                    {
                                                        <button class="btn btn-outline-info btn-sm" style="margin: 3px 0px 3px 3px;" disabled>@skill <b>@lvlIndex</b></button> }
                                                    if (lvlIndex == 3)
                                                    {
                                                        <button class="btn btn-outline-primary btn-sm" style="margin: 3px 0px 3px 3px;" disabled>@skill <b>@lvlIndex</b></button> }
                                                    if (lvlIndex == 4)
                                                    {
                                                        <button class="btn btn-outline-success btn-sm" style="margin: 3px 0px 3px 3px;" disabled>@skill <b>@lvlIndex</b></button> }
                                                }
                                                if (cat is SkillCategory castCat && castCat.Children.Any())
                                                {
                                                    <b>@castCat.Name</b>
                                                    <div>
                                                        @foreach (Skill skill2 in castCat.Children)
                                                        {
                                                            int lvlIndex = Array.FindIndex(skillService.GetAllLevel(), (x => x == skill2.Level)) + 1;
                                                            if (lvlIndex == 1)
                                                            {
                                                                <button class="btn btn-outline-secondary btn-sm" style="margin: 3px 0px 3px 3px;" disabled>@skill2 <b>@lvlIndex</b></button> }
                                                            if (lvlIndex == 2)
                                                            {
                                                                <button class="btn btn-outline-info btn-sm" style="margin: 3px 0px 3px 3px;" disabled>@skill2 <b>@lvlIndex</b></button> }
                                                            if (lvlIndex == 3)
                                                            {
                                                                <button class="btn btn-outline-primary btn-sm" style="margin: 3px 0px 3px 3px;" disabled>@skill2 <b>@lvlIndex</b></button> }
                                                            if (lvlIndex == 4)
                                                            {
                                                                <button class="btn btn-outline-success btn-sm" style="margin: 3px 0px 3px 3px;" disabled>@skill2 <b>@lvlIndex</b></button>}
                                                        }
                                                    </div>}
                                            }
                                        </CardBody>
                                    </CollapsibleCard2> }
                            }
                        } }
                </div>
            </CardBody>
        </CollapsibleCard2>
    </div>

    <div class="col-sm-6 mb-3" style="min-height: 200px;">
        <CollapsibleCard2 CardHeaderTitle="Projekte" ShowCardBody="@ColabseState[5]">
            <CardBody>
                <div class="scroll2">
                    <table class="table table-bordered table-striped text-center">
                        <thead>
                            <tr>
                                <th class="text-center">beteiligte Projekte</th>
                                <th class="text-center">Tätigkeiten im Projekt</th>
                            </tr>
                        </thead>
                        @foreach (Project pro in proService.ShowAllProjects())
                        {
                            if (pro.Activities.Any(x => x.Value.persNr.Contains(myProfile.PersoNumber)))
                            {
                                <tr>
                                    <td class="pt-3-half">
                                        @pro.Title
                                    </td>
                                    <td class="pt-3-half">
                                        @foreach (var keyValue in pro.Activities.Where(x => x.Value.persNr.Contains(
                                  myProfile.PersoNumber)))
                                        {
                                            @keyValue.Key
                                            <br>}
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </div>
            </CardBody>
        </CollapsibleCard2>
    </div>

</div>


<a href="edit-profile" class="btn btn-secondary" style="float: right; margin: 3em 1em"> Bearbeiten</a>
<br>
<br>


