@page "/"
@page "/my-profile"
@attribute [Authorize]


@inject CustomAuthentiProvider authentiProvider
@inject IProfileService profileService
@inject ISkillService skillService
@inject ILanguageService sprachenService

@inject IProjectService proService


<div class="container-fluid">


    <div class="card my-1">
        <div class="card-header text-center">
            <h3>Profil Übersicht von @myProfile.PersoNumber</h3>
        </div>
    </div>
    @if (!myProfile.MadeFirstChangesOnProfile)
    {
        <br>
        <div class="alert alert-warning" role="alert">
        Sie habe noch keine Änderungen an ihrem Profil vorgenommen.<br>
        Bitte tragen Sie die die Informationen möglichst bald ein.<br>
    </div>
    }


    <div class="card mb-3">
        <div class="card-header">
            <h4> Beschreibung </h4>
        </div>

        <div class="row g-0">
            <div class="col-md-4">
                <img src="@myProfile.Image" alt="Profilbild" class="rounded" style="margin:1em; max-width:90%">
            </div>
            <div class="col-md-8">
                <div class="card-body">
                    <h5 class="card-title">@myProfile.FirstName &nbsp; @myProfile.LastName</h5>
                    <p class="card-text" style="min-height: 200px;">
                    <pre>@myProfile.Description</pre>
                    </p>
                    <p class="card-text"><b>Rate Card Level: @myProfile.RCL</b> &nbsp;  &nbsp;  &nbsp; Berufserfahrung : @myProfile.Expirience Jahre</p>

                </div>
            </div>
        </div>
    </div>

    <div class="row gutters-sm">
        <div class="col-sm-6 mb-3" style="min-height: 200px;">
            <CollapsibleCard CardHeaderTitle="Rollen" ShowCardBody=true>
                <CardBody>
                    <div class="scroll">
                        @foreach (Role role in myProfile.Roles)
                        {
                        <p>@role @role.Wage&euro;</p>
                        }
                    </div>
                </CardBody>
            </CollapsibleCard>
        </div>
        <div class="col-sm-6 mb-3" style="min-height: 200px;">
            <CollapsibleCard CardHeaderTitle="Branchenwissen" ShowCardBody=true>
                <CardBody>
                    <div class="scroll">
                        @foreach (Field field in myProfile.Fields)
                        {
                        <p>@field</p>
                        }
                    </div>
                </CardBody>
            </CollapsibleCard>
        </div>


        <div class="col-sm-6 mb-3" style="min-height: 200px;">
            <CollapsibleCard CardHeaderTitle="SoftSkills" ShowCardBody=true>
                <CardBody>
                    <div class="scroll">
                        @foreach (Skill skill in myProfile.Abilities.Where(x => x.Type == SkillGroup.Softskill))
                        {
                        <p>@skill.Name</p>
                        }
                    </div>
                </CardBody>
            </CollapsibleCard>
        </div>
        <div class="col-sm-6 mb-3" style="min-height: 200px;">
            <CollapsibleCard CardHeaderTitle="Sprachen" ShowCardBody=true>
                <CardBody>
                    <div class="scroll">
                        @foreach (Language lang in myProfile.Languages)
                        {
                        var lvlIndex = Array.FindIndex(sprachenService.GetAllLevel(), (x => x == lang.Level));
                        int lvlIndexPerce = ((int)lvlIndex * 100 / (sprachenService.GetAllLevel().Length - 1));

                        @lang.Name
                        <div class="progress mb-3" style="height:15px">
                            <div class="progress-bar bg-secondary" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: @lvlIndexPerce%;">
                                @lang.Level
                            </div>
                        </div>
                        }
                    </div>
                </CardBody>
            </CollapsibleCard>
        </div>
 

        <div class="col-sm-6 mb-3" style="min-height: 200px;">
                <CollapsibleCard CardHeaderTitle="Hardskills" ShowCardBody=true>
                <CardBody>
                    <div class="scroll2">
                    @{
                    var myHskills = myProfile.Abilities.Where(x => x.Type == SkillGroup.Hardskill);
                    if(myHskills.Any())
                    {
                        var root = myHskills.First().Category.Parent;
                        if (root.Parent != null)
                            root = root.Parent;
                        foreach (SkillCategory cat1 in root.Children)
                        {
                            <CollapsibleCard CardHeaderTitle="@cat1.Name" ShowCardBody=true SmallInner="true">
                                <CardBody>
                                @foreach (SkillCategory cat in cat1.Children)
                                {
                                if(cat is Skill skill)
                                {
                                    int lvlIndex = Array.FindIndex(skillService.GetAllLevel(), (x => x == skill.Level));
                                    int lvlIndexPerce = (lvlIndex * 100 / (skillService.GetAllLevel().Length - 1));
                                    <p class="mb-0">@skill</p>
                                    <div class="progress mb-0" style="height:15px">
                                        <div class="progress-bar bg-secondary" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: @lvlIndexPerce%;">
                                            @skill.Level
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <CollapsibleCard CardHeaderTitle="@cat.Name" ShowCardBody=true SmallInner="true">
                                        <CardHeader> @cat.Children.Count() enthalten</CardHeader>
                                        <CardBody>
                                            @foreach (Skill skill2 in cat.Children)
                                            {
                                            int lvlIndex = Array.FindIndex(skillService.GetAllLevel(), (x => x == skill2.Level));
                                            int lvlIndexPerce = (lvlIndex * 100 / (skillService.GetAllLevel().Length - 1));
                                            <p class="mb-0">@skill2</p>
                                            <div class="progress mb-0" style="height:15px">
                                                <div class="progress-bar bg-secondary" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: @lvlIndexPerce%;">
                                                    @skill2.Level
                                                </div>
                                            </div>
                                            }
                                        </CardBody>
                                    </CollapsibleCard>
                                }
                                }
                                </CardBody>
                            </CollapsibleCard>
                        }
                    }
                    }
                    </div>
                </CardBody>
            </CollapsibleCard>
        </div>
        <div class="col-sm-6 mb-3" style="min-height: 200px;">
            <CollapsibleCard CardHeaderTitle="Projekte " ShowCardBody=true>
                <CardBody>
                    <div class="scroll">
                        <table class="table table-bordered table-striped text-center">
                            <thead>
                                <tr>
                                    <th class="text-center">Projekt</th>
                                    <th class="text-center">Tätigkeit</th>
                                </tr>
                            </thead>
                            @foreach (Project pro in proService.ShowAllProjects())
                {
                            <tr>
                                <td class="pt-3-half"> @pro.Title
                                        @if(pro.ActivitiesWithEmployees[""].Any(x => x ==  myProfile.PersoNumber))
                                        {
                                        <span class="text-success"> war dabei</span>
                                        } 
                                </td>
                                <td class="pt-3-half">
                                    @foreach (var key in pro.ActivitiesWithEmployees.Keys.Where(x => x != ""))
                                    {
                                        @key
                                        @if(pro.ActivitiesWithEmployees[key].Any(x => x ==  myProfile.PersoNumber))
                                        {
                                        <span class="text-success"> war dabei</span>
                                        }
                                        <br>
                                    }
                                </td>
                            </tr>

                            }
                        </table>
                    </div>
                </CardBody>
            </CollapsibleCard>
        </div>

    </div>


</div>

<br>
<br>


@code {
    private Employee myProfile = new Employee();


    protected override async Task OnInitializedAsync()
    {
        var authstate = await authentiProvider.GetAuthenticationStateAsync();

        myProfile = profileService.ShowProfile(authstate.User.Identity.Name) ?? new Employee();
    }


}
