@page "/change-data-set"


@using Microsoft.AspNetCore.Hosting

@inject IWebHostEnvironment Environment
@inject IJSRuntime JS
@inject IBasicDataSetService dataSetService
@inject IRoleService roleService


<b>Datenbasis: ändern</b>
<br>
<div class="row ">
    <div class="col-6">
        fields:<br>
            <textarea readonly class="form-control " rows="2" @bind="@textareas[1]">
            </textarea>
            <input id="name" />Brache hinzufügen<br>
        roles:<br>
            <textarea readonly class="form-control " rows="3" @bind="@textareas[2]">
            </textarea>
            <input id="name" /> wages ändern<br>
        languages:<br>
            <textarea readonly class="form-control " rows="2" @bind="@textareas[3]">
            </textarea>
            <input id="name" /> sprache hinzufügen<br>
            <input id="name" /> sprach-lvl hinzufügen<br>
        skills:<br>
            <textarea readonly class="form-control " rows="3" @bind="@textareas[4]">
            </textarea>
            <input id="name" /> skill hinzufügen<br>
            <input id="name" /> lvl-1 Namen ändern<br>
            <input id="name" /> lvl-2 Namen ändern<br>
            <input id="name" /> lvl-3 Namen ändern<br>
            <input id="name" /> lvl-4 Namen ändern<br>

    </div>
    <div class="col-6">
        <br><br>
        <ul class="alert alert-danger" role="alert">
            @foreach (string line in changeInfo.ErrorMessages)
            {
                    <li>
                        <pre>@line</pre>
                    </li>
            }
        </ul>
        <ul class="alert alert-info" role="alert">
            @foreach (string line in changeInfo.InfoMessages)
            {
                    <li>
                        <pre>@line</pre>
                    </li>
            }
        </ul>
    </div>
</div>

<div class="alert alert-success" role="alert">
    @changeInfo?.SuccesMessage
</div>
eine komplette datenbasis in das Feld hochladen
<InputFile OnChange="@ShowUpload" class="btn btn-sm btn-primary" />
        <div class="outerbox @(validJson ? "" : "invalid")">
            <textarea class="form-control" style="white-space: pre;" rows="6" @bind="@textareas[0]">
            </textarea>
        </div>  
<button class="btn btn-secondary" style="margin: 0.2em;" @onclick="Upload" @onmouseover="Validate">
    diese Version in die Datenbank laden
</button>
<br>
<br>
<br>






@code {
    private string[] textareas = new string[5];
    private bool validJson = true;
    private ChangeResult changeInfo = new();

    protected override void OnInitialized()
    {
        dataSetService.ChangeEventHandel += OnChange;
        textareas = dataSetService.ShowCurrentDataSet();
    }

    private async Task ShowUpload(InputFileChangeEventArgs eventA)
    {
        textareas = await dataSetService.ShowBrowserFile(eventA.File);
        StateHasChanged();
    }


    private void Validate()
    {
        textareas = dataSetService.ValidateUpdate(textareas);// might show ChangeInfo and ChangeInfo.Error
        StateHasChanged();
    }
    private void Upload()
    {
        dataSetService.Update(textareas); // shows either ChangeInfo.Error o. ChangeInfo.Succes
    }




    private void OnChange(object sender, ChangeResult e)
    {
        changeInfo = e;
        validJson = (!e.ErrorMessages.Any());
    }
}