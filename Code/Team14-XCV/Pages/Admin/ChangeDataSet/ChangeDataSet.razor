@page "/change-data-set"
@attribute [Authorize(Roles = "admin, sales")]


@inject IFieldService fiService
@inject IRoleService roService
@inject ILanguageService langService
@inject ISkillService skillService


<div class="card my-1">
    <div class="card-header text-center" style="position: relative">
        <h3 style="text-align: center">Datenbasis bearbeiten</h3>
    </div>
</div>

<div class="alert alert-success" role="alert">
    @changeInfo?.SuccesMessage
</div>

          
<div class="row">
    <FieldWidg fiService="@fiService" ShowCardBody="@ColabseStateField">
    </FieldWidg>

    <RoleWidg roleService="@roService" ShowCardBody="@ColabseStateRole">
    </RoleWidg>

    <LangWidg laService="@langService" ShowCardBody="@ColabseStateLang">
    </LangWidg>

    <SkillWidg skService="@skillService" ShowCardBody="@ColabseStateSKill">
    </SkillWidg>
</div>
<br>
<br>
<br>


@code {
    public ValueWrapper<bool> ColabseStateField = new ValueWrapper<bool>(true);
    public ValueWrapper<bool> ColabseStateRole = new ValueWrapper<bool>(true);
    public ValueWrapper<bool> ColabseStateLang= new ValueWrapper<bool>(true);
    public ValueWrapper<bool> ColabseStateSKill = new ValueWrapper<bool>(true);

    protected override void OnInitialized()
    {
        fiService.ChangeEventHandel += OnChange;
        roService.ChangeEventHandel += OnChange;
        langService.ChangeEventHandel += OnChange;
        skillService.ChangeEventHandel += OnChange;
    }



    private ChangeResult changeInfo = new();
    private void OnChange(object sender, ChangeResult e) 
    {
        if(e.SuccesMessage != "")
            changeInfo.SuccesMessage= e.SuccesMessage;
       StateHasChanged();
    }
    
}